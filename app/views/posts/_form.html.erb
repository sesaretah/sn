<div class="card">
  <%= form_for @post do |f|%>
  <div class='card-body'>
    <div class="row">
      <div class="col-md-5">
        <div class="form-group">
          <%= f.label :title, class: "form-label" %>
          <%= f.text_field :title, class: "form-control"%>
        </div>
      </div>
    </div>
    <%= f.hidden_field :stream_id, value: params[:stream_id]%>
    <%= f.hidden_field :raw_content, value: ''%>
    <% if @upload_ids.blank?%>
    <%= hidden_field_tag :attachments, ''%>
    <%else%>
    <%= hidden_field_tag :attachments, @upload_ids.split(',')%>
    <%end%>
    <%= f.hidden_field :content%>
    <trix-editor input="post_content"></trix-editor>
  <%end%>

  <script></script>
</div>
  <div class="card-footer text-right">
    <button id='submit-btn' type="submit" class="btn btn-primary"><%=t :submit%></button>
  </div>
  <script>
  $( "#submit-btn" ).click(function() {
    console.log('clicked');
    $( ".<%= params[:action]%>_post" ).submit();
  });
  </script>
</div>
<script type="text/javascript">
  $(document).ready(function() {
    Trix.config.attachments.preview.caption = {
      name: false,
      size: false
    };

    function uploadAttachment(attachment) {
      var csrfToken = $('meta[name="csrf-token"]').attr('content');
      var file = attachment.file;
      var form = new FormData;
      var endpoint = "/uploads";
      form.append("Content-Type", file.type);
      form.append("file", file);
      form.append("upload[uploadable_type]", 'Blog');
      form.append("upload[uploadable_id]", '0');
      form.append("authenticity_token", window._token);

      xhr = new XMLHttpRequest;
      xhr.open("POST", endpoint, true);
      xhr.setRequestHeader("X-CSRF-Token", csrfToken);

      xhr.upload.onprogress = function(event) {
        var progress = event.loaded / event.total * 100;
        return attachment.setUploadProgress(progress);
      };

      xhr.onload = function() {
        if (this.status >= 200 && this.status < 300) {
          var data = JSON.parse(this.responseText);
          $('#attachments').val($('#attachments').val() + ',' + data.id);
            return attachment.setAttributes({
            url: data.extra
          });
        }
      };

      return xhr.send(form);
    };

    document.addEventListener("trix-attachment-add", function(event) {
      var attachment = event.attachment;
      if (attachment.file) {
        return uploadAttachment(attachment);
      }
    });

    document.addEventListener("trix-change", function(event) {
      var element = document.querySelector("trix-editor")
      $("#post_raw_content").val(element.editor.getDocument().toString());
    });
  });
</script>
